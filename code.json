{"types":[{"name":"16","type":{"primitiveTypeIndex":0,"value":16}},{"name":"8","type":{"primitiveTypeIndex":0,"value":8}},{"name":"описание читаемых с диска данных","type":{"primitiveTypeIndex":2,"value":[{"name":"размер структуры(должен быть 16)","typeIndex":1},{"name":"зарезервировано(установить в 0)","typeIndex":1},{"name":"количество читаемых секторов диска(размер сектора 512 байт, количество прочитанных данных = 512 * количество читаемых секторов)","typeIndex":0},{"name":"смещение памяти(куда копировать прочитанные данные, линейный адрес = сегмент памяти * 16 + смещение)","typeIndex":0},{"name":"сегмент памяти","typeIndex":0},{"name":"номер первого сектора для чтения(отсчёт с 0)","typeIndex":3},{"name":"номер первого сектора для чтения(продолжение)","typeIndex":3}]}},{"name":"32","type":{"primitiveTypeIndex":0,"value":32}}],"constants":[{"name":"смайл","typeIndex":1,"value":1},{"name":"адрес стека","typeIndex":0,"value":65535},{"name":"адрес загрузчика","typeIndex":2,"value":[16,0,128,0,4096,1,0]},{"name":"адрес кода","typeIndex":0,"value":0},{"name":"сегмент кода","typeIndex":0,"value":4096}],"functions":[{"name":"старт программы","arguments":[],"combinations":[{"variables":[],"combination":[],"body":[{"functionIndex":3,"arguments":[{"constantIndex":1}]},{"functionIndex":4,"arguments":[{"constantIndex":2}]},{"functionIndex":5,"arguments":[{"constantIndex":3},{"constantIndex":4}]}],"translate":""}]},{"name":"остановиться","arguments":[],"combinations":[{"variables":[],"combination":[],"body":[],"translate":"out.write(0xF4) //halt"}]},{"name":"вывести символ","arguments":[{"label":"","name":"с"}],"combinations":[{"variables":[],"combination":[1],"body":[],"translate":"var character\nvar value\n\nif(typeof arguments[0].constantIndex !== 'undefined') {\n    character = constants[arguments[0].constantIndex]\n    value = character.value\n}\n\nout.write(0xBB); out.write(0x00); out.write(0x00); //mov bx, 0\nout.write(0xB9); out.write(0x01); out.write(0x00); //mov cx, 1\nout.write(0xB4); out.write(0x0E);                  //mov ah, 0x0E\nout.write(0xB0); out.write(value);                 //mov al, value\nout.write(0xCD); out.write(0x10);                  //int 10h\n\nconsole.log('write character')"},{"variables":[],"combination":[0],"body":[],"translate":"var character\nvar value\n\nif(typeof arguments[0].constantIndex !== 'undefined') {\n    character = constants[arguments[0].constantIndex]\n    value = character.value\n}\n\nout.write(0xBB); out.write(0x00); out.write(0x00); //mov bx, 0\nout.write(0xB9); out.write(0x01); out.write(0x00); //mov cx, 1\nout.write(0xB4); out.write(0x0E);                  //mov ah, 0x0E\n\nout.write(0xB0); out.write(value % 256);           //mov al, value\nout.write(0xCD); out.write(0x10);                  //int 10h\n\nout.write(0xB0); out.write(value / 256 % 256);     //mov al, value\nout.write(0xCD); out.write(0x10);                  //int 10h\n\nconsole.log('write 2 characters')"}]},{"name":"установить адрес вершины стека стека","arguments":[{"label":"в","name":"адрес"}],"combinations":[{"variables":[],"combination":[0],"body":[],"translate":"var argument\n\nif(typeof arguments[0].constantIndex !== 'undefined')\n    argument= constants[ arguments[0].constantIndex ]\n\nvar value = argument.value\n\nout.write(0xBC); //mov sp, value\n    out.write(value % 256); out.write((value / 256) % 256);\n\n\n\n"}]},{"name":"прочитать данные с диска","arguments":[{"label":"в","name":"память"}],"combinations":[{"variables":[],"combination":[2],"body":[],"translate":"var constant = constants[arguments[0].constantIndex]\n\nout.write(0xB4); out.write(0x42);    //mov ah, 0x42\nout.write(0xB2); out.write(0x80);    //mov dl, 0x80\nout.write(0xBE);                     //mov si, address\n  out.write(constant.beginAddress % 256); out.write(constant.beginAddress / 256 % 256);\nout.write(0xCD); out.write(0x13);    //int 13h\n"}]},{"name":"перейти к коду","arguments":[{"label":"по адресу","name":"адрес"},{"label":"со смещением","name":"смещение"}],"combinations":[{"variables":[],"combination":[0,0],"body":[],"translate":"var address = constants[arguments[0].constantIndex]\nvar segment = constants[arguments[1].constantIndex]\n\nout.write(0xEA); //jmp segment:address\n  out.write(address.value % 256); out.write(address.value / 256 % 256);\n  out.write(segment.value % 256); out.write(segment.value / 256 % 256);\n"}]}]}